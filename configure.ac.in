# Process this file with autoconf to produce a configure script.

AC_PREREQ([2.64])
AC_INIT([nox],[0.9.2~APPS_ID~beta],[contact@noxrepo.org])

AC_USE_SYSTEM_EXTENSIONS
AC_SYS_LARGEFILE

AC_CONFIG_SRCDIR([src])
AC_CONFIG_HEADERS([config.h])
AC_CONFIG_AUX_DIR([config])
AC_CONFIG_MACRO_DIR([m4])
LT_INIT([dlopen])
LT_LANG([C++])

NX_BUILDNR
AH_BOTTOM([/* NOX 0.9.1~APPS_ID~beta. */
#define NOX_VERSION VERSION BUILDNR_SUFFIX])

AM_INIT_AUTOMAKE([tar-ustar -Wno-portability])

# Checks for programs.
CXXFLAGS="-g -O0"
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_MKDIR_P

AX_CXX_COMPILE_STDCXX_0X
if test "$ax_cv_cxx_compile_cxx0x_native" = "yes"; then
  true
elif test "$ax_cv_cxx_compile_cxx0x_gxx" = "yes"; then
  CXXFLAGS="$CXXFLAGS -std=gnu++0x"
elif test "$ax_cv_cxx_compile_cxx0x_cxx" = "yes"; then
  CXXFLAGS="$CXXFLAGS -std=c++0x"
else
  AC_MSG_ERROR([no support for C++0x])
fi

# Checks for header files.
AC_CHECK_HEADERS([arpa/inet.h fcntl.h inttypes.h limits.h netdb.h netinet/in.h stdint.h stdlib.h string.h sys/socket.h sys/time.h syslog.h unistd.h])
AC_CHECK_LIB([ltdl], [lt_dladvise_init],
             [LIBLTDL=-lltdl], AC_MSG_ERROR([cannot find the ltdl library]))
AC_SUBST(LIBLTDL)

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_INLINE
AC_TYPE_SIZE_T
AC_TYPE_SSIZE_T
AC_TYPE_UINT16_T
AC_TYPE_UINT32_T
AC_TYPE_UINT64_T
AC_TYPE_UINT8_T

# Checks for library functions.
AC_CHECK_FUNCS([dup2 gethostbyname gettimeofday inet_ntoa memset socket strcasecmp strchr strerror strrchr])

AX_TLS([], AC_MSG_ERROR([thread-local storage is not supported]))
CHECK_NDEBUG
CHECK_PROFILING
CHECK_COVERAGE
#CHECK_NETLINK

# Checks for OpenSSL
AX_CHECK_OPENSSL([], AC_MSG_ERROR([cannot find the OpenSSL library]))

# Checks for Boost libraries
AX_BOOST_BASE([1.42])
AX_BOOST_ASIO
AX_BOOST_FILESYSTEM
AX_BOOST_SERIALIZATION
AX_BOOST_SYSTEM
AX_BOOST_THREAD

# Checks for Intel TBB library
#AX_TBB([], AC_MSG_ERROR([cannot find the Intel TBB library]))

# Doxygen configuration
DX_HTML_FEATURE(ON)
DX_CHM_FEATURE(OFF)
DX_CHI_FEATURE(OFF)
DX_MAN_FEATURE(OFF)
DX_RTF_FEATURE(OFF)
DX_XML_FEATURE(OFF)
DX_PDF_FEATURE(OFF)
DX_PS_FEATURE(OFF)
DX_INIT_DOXYGEN(nox, doc/doxygen.conf, doc)

# Add your module here to have it grouped into a package

ACI_PACKAGE([coreapps],[core application set],
               [ openflow switch
                 #add coreapps component here
               ],
               [yes])
ACI_PACKAGE([netapps],[misc network apps],
               [
                 #add netapps component here
               ],
               [TURN_ON_NETAPPS])

AC_SUBST(ACTIVE_PACKAGES)
AC_SUBST(MODULES_coreapps)               
AC_SUBST(MODULES_netapps)               

AM_CONDITIONAL([HAVE_NETAPPS], [test -n "$MODULES_netapps"])

AC_ARG_ENABLE(
  [noext],
  [AS_HELP_STRING([--enable-noext],[Ignore ext directory even if it exists])],
  [case "${enableval}" in # (
     yes) noext=true ;; # (
     no)  noext=false ;; # (
     *) AC_MSG_ERROR([bad value ${enableval} for --enable-noext]) ;;
   esac],
  [noext=false]
)

# AC_CONFIG_FILES and AC_CONFIG_SUBDIRS GENERATED BY ./boot.sh Don't
# put anything below this line!
